apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'jacoco'

jacoco {
    toolVersion = "$jacocoVersion"
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}

def androidExclusion = [
        '**/databinding/**/*.*',
        '**/android/databinding/*Binding.*',
        '**/BR.*',
        '**/R.*',
        '**/R$*.*',
        '**/BuildConfig.*',
        '**/Manifest*.*',
        '**/*_MembersInjector.*',
        '**/Dagger*Component.*',
        '**/Dagger*Component$Builder.*',
        '**/*Module_*Factory.*',
        '**/*Fragment*.*',
        '**/*Activity*.*',
        '**/*Adapter*.*',
        '**/*ViewPager*.*',
        '**/*ViewHolder*.*',
        '**/*Module*.*'
]

task codeCoverageReport(type: JacocoReport, dependsOn: 'test') {
    group = "Reporting"
    description = "Generate Jacoco coverage reports after running tests."
    reports {
        xml.enabled = true
        html.enabled = true
    }
    classDirectories.from = fileTree(
            dir: 'build/intermediates/classes/staging/debug/com/com.assessment',
            excludes: androidExclusion
    )
    sourceDirectories.from = files('src/main/java/com.assessment')
    executionData.from = files('build/jacoco/testStagingDebugUnitTest.exec')
}

task getCoverage(type: Exec, dependsOn: 'codeCoverageReport') {
    group = "Reporting"
    commandLine "open", "$buildDir/reports/jacoco/codeCoverageReport/html/index.html"
}

android {
    compileSdkVersion 30
    defaultConfig {
        applicationId "com.assessment"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
        animationsDisabled true

        unitTests {
            includeAndroidResources = true
        }
    }

    androidExtensions {
        experimental = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //Android
    implementation 'androidx.recyclerview:recyclerview:1.2.0'
    implementation 'androidx.appcompat:appcompat:1.2.0'

    //Utils
    implementation 'com.github.pwittchen:reactivenetwork:0.9.1'
    implementation 'com.hannesdorfmann:adapterdelegates3:3.0.0'
    implementation 'com.google.code.gson:gson:2.8.6'

    //Dagger
    implementation 'com.google.dagger:dagger:2.35'
    kapt 'com.google.dagger:dagger-compiler:2.35'

    // RxJava2
    implementation 'io.reactivex.rxjava2:rxjava:2.2.19'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation  'com.jakewharton.rxbinding2:rxbinding:2.2.0'

    //Retrofit
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation('com.squareup.retrofit2:retrofit:2.9.0') {
        exclude module: 'okhttp'
    }
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.5.0'
    implementation('com.squareup.okhttp3:okhttp-urlconnection:3.12.1') {
        exclude group: 'com.squareup.okio', module: 'okio'
        exclude group: 'com.squareup.okhttp3', module: 'okhttp'
    }
    implementation('com.squareup.okhttp3:logging-interceptor:4.9.0') {
        exclude group: 'com.squareup.okio', module: 'okio'
        exclude group: 'com.squareup.okhttp3', module: 'okhttp'
    }
    implementation('com.squareup.okhttp3:okhttp:4.9.0') {}

    //Testing
    testImplementation 'junit:junit:4.13.1'
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testImplementation 'androidx.test.ext:junit-ktx:1.1.2'
    testImplementation 'org.mockito:mockito-core:3.5.13'
    testImplementation 'org.assertj:assertj-core:3.8.0'
    testImplementation 'org.robolectric:robolectric:4.4'

    androidTestImplementation 'androidx.test:core:1.3.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation 'androidx.test:rules:1.3.0'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestUtil 'androidx.test:orchestrator:1.3.0'
    androidTestImplementation "com.nhaarman:mockito-kotlin-kt1.1:1.5.0"
    androidTestImplementation 'com.linkedin.dexmaker:dexmaker-mockito:2.2.0'
    androidTestImplementation 'androidx.test:rules:1.3.0'
}
